from string_base import str31

# 문자열(str) 처리 예: slicing(문자열 뒤집기)

# ㄱ)
str31_s1 = str31[::-1] # 끝에서부터 맨 앞까지, '-1' 간격(뒤에서부터 1글자씩 앞으로)
print(f'ㄱ) ({len(str31_s1)}):', str31_s1)

# ㄴ)
str31_s2 = str31[::-2] # 끝에서부터 맨 앞까지, '-2' 간격(뒤에서부터 2글자씩 앞으로)
print(f'ㄴ) ({len(str31_s2)}):', str31_s2)

# ㄷ)
str31_s3 = str31[8:6:-1] # '-1' 간격(뒤에서부터 1글자씩 앞으로)
print(f'ㄷ) ({len(str31_s3)}):', str31_s3)

# ㄹ)
str31_s4 = str31[6:1:-2] # '-2' 간격(뒤에서부터 2글자씩 앞으로)
print(f'ㄹ) ({len(str31_s4)}):', str31_s4)

# ㅁ)
str31_s5 = str31[1:6:-2] # '-2' 간격
print(f'ㅁ) ({len(str31_s5)}):', str31_s5) # start가 stop보다 작기 때문에 아무것도 없다.

'''
# ㅂ)
str31_s6 = str31[3::-1] # '-1' 간격(뒤에서부터 1글자씩 앞으로)
print(f'ㅂ) ({len(str31_s6)}):', str31_s6)

# ㅅ)
str31_s7 = str31[(len(str31) - 1)::-1] # 문자열 끝에서부터 맨 앞까지, 뒤에서부터 '-1' 간격
print(f'ㅅ) ({len(str31_s7)}):', str31_s7)

# ㅇ) 시작(start)값이 문자열 범위를 벗어나서 문자열 끝(len - 1)부터
str31_s8 = str31[len(str31)::-1] # [문자열_끝+1]에서부터 맨 앞까지, 뒤에서부터 '-1' 간격
print(f'ㅇ) ({len(str31_s8)}):', str31_s8)

# ㅈ)
str31_s9 = str31[(len(str31) - 1):0:-1] # 문자열 끝에서부터 0번째 직전까지, 뒤에서부터 '-1' 간격
print(f'ㅈ) ({len(str31_s9)}):', str31_s9) # [0번째 직전]은 [0번째]에 해당하는 첫 번째 글자를 포함하지 않는다.

# ㅊ)
str31_s10 = str31[(len(str31) - 1):-1:-1] # 끝에서부터 맨 앞까지, '-1' 간격(뒤에서부터 1글자씩 앞으로)
print(f'ㅊ) ({len(str31_s10)}):', str31_s10) # ===> stop을  '-1'로 주면 길이를 벗어나서 아무것도 없다.

'''
#=# 임시
#=print(str31[-9])
#=print(str31[-10]) # 범위를 벗어나기 때문에 오류 발생


'''
처리 결과:
==============================
ㄱ) (9): 국민한대 운다름아
ㄴ) (5): 국한 다아
ㄷ) (2): 국민
ㄹ) (3): 한 다
ㅁ) (0):
-----------------------------
ㅂ) (4): 운다름아
ㅅ) (9): 국민한대 운다름아
ㅇ) (9): 국민한대 운다름아
ㅈ) (8): 국민한대 운다름
ㅊ) (0):

'''


